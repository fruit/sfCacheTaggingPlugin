detect_relations: true
options:
  type: InnoDB
  charset: utf8
  collation: utf8_general_ci

BlogPost:
  options:
    symfony: { form: false, filter: false }
  tableName: blog_post
  actAs:
    Cachetaggable: ~
    I18n:
      fields: [content]
  columns:
    id:
      type: integer
      primary: true
      autoincrement: true
      unsigned: true
      notnull: true
    is_enabled: boolean(true)
    title: string(255)
    slug: string(10)
    content: clob
  relations:
    BlogPostComment:
      class: BlogPostComment
      type: many
      foreignType: one
      local: id
      foreign: blog_post_id
      foreignAlias: BlogPost
      cascade: [delete]
    BlogPostVote:
      class: BlogPostVote
      type: many
      foreignType: one
      local: id
      foreign: blog_post_id
      foreignAlias: BlogPost
      cascade: [tags]

BlogPostComment:
  options:
    symfony: { form: false, filter: false }
  tableName: blog_post_comment
  actAs:
    Cachetaggable:
      uniqueColumn: id
  columns:
    id:
      type: integer
      primary: true
      autoincrement: true
      unsigned: true
    blog_post_id:
      type: integer
      unsigned: true
      notnull: false
    author: string(20)
    message: string(255)
  relations:
    BlogPost:
      onDelete: CASCADE
      onUpdate: CASCADE


BlogPostVote:
  options:
    symfony: { form: false, filter: false }
  actAs:
    Cachetaggable: ~
  columns:
    id:
      type: integer
      primary: true
      autoincrement: true
      unsigned: true
    blog_post_id:
      type: integer
      unsigned: true
      notnull: false
    rate:
      type: int(1)
      unsigned: true
      notnull: true
      default: 0
  relations:
    BlogPost:
      onDelete: CASCADE
      onUpdate: CASCADE

PostVote:
  options:
    symfony: { form: false, filter: false }
  actAs:
    Cachetaggable: ~
  columns:
    blog_post_vote_id:
      type: integer
      unsigned: true
      primary: true
    blog_post_id:
      type: integer
      unsigned: true
      primary: true

Book:
  options:
    symfony: { form: false, filter: false }
  tableName: book
  actAs:
    Cachetaggable:
      uniqueColumn: [lang, slug]
      uniqueKeyFormat: '%s-%s'
  columns:
    slug: string(40)
    lang: string(2)
  indexes:
    lang_slug_idx: { fields: [lang, slug], type: unique }

Food:
  options:
    symfony: { form: false, filter: false }
  tableName: food
  actAs:
    SoftDelete: ~
    Cachetaggable: ~
  columns:
    title: string(255)

FoodReordered:
  options:
    symfony: { form: false, filter: false }
  actAs:
    Cachetaggable: ~
    SoftDelete: ~
  columns:
    title: string(255)


Repository:
  options:
    symfony: { form: false, filter: false }
  tableName: repository
  actAs:
    Cachetaggable:
      uniqueColumn: [hash, version, fake_column]
      uniqueKeyFormat: '%s-%d'
  columns:
    hash: string(32)
    version: integer(1)
  indexes:
    hash_version_idx: { fields: [hash, version], type: unique }

University:
  options:
    symfony: { form: false, filter: false }
  tableName: university
  columns:
    name: string(255)

SkipOnColumnUpdateTest:
  options:
    symfony: { form: false, filter: false }
  actAs:
    Cachetaggable:
      skipOnChange:
        - author
        - count
  columns:
    name: string(255)
    count: integer(1)
    author: string(255)

Device:
  options:
    symfony: { form: false, filter: false }
  actAs:
    Cachetaggable:
      invalidateCollectionVersionOnUpdate: true
  columns:
    name: string(255)

Weapon:
  options:
    symfony: { form: false, filter: false }
  actAs:
    Cachetaggable: ~
  columns:
    material_id:
      type: integer(4)
      primary: true
      unsigned: true
    size_id:
      type: integer(4)
      primary: true
      unsigned: true
    name: string(255)


AirCompany:
  options:
    symfony: { form: false, filter: false }
  actAs:
    Cachetaggable:
      invalidateCollectionVersionByChangingColumns:
        - is_enabled
        - is_deleted
  columns:
    id:
      type: integer
      primary: true
      autoincrement: true
      unsigned: true
    name: string(255)
    since: date
    is_enabled: boolean(true)
    is_deleted: boolean(false)
