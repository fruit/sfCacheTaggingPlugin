<?xml version="1.0" encoding="UTF-8"?>
<package
  xmlns="http://pear.php.net/dtd/package-2.0"
  xmlns:tasks="http://pear.php.net/dtd/tasks-1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  packagerversion="1.4.6"
  version="2.0"
  xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
  <name>sfCacheTaggingPlugin</name>
  <channel>pear.symfony-project.com</channel>
  <summary>Smart caching plugin</summary>
  <description>
    The ``sfCacheTaggingPlugin`` is a Symfony plugin that allows you to not think about
    cache obsolescence. The user will see only a fresh data thanks to cache tagging.
    The plugin helps to keep cached content up-to-date without setting cache lifetime.
    So-called &quot;Smart caching&quot;, stores cache with fetched models tags and its versions.
    Each time you save/update/delete objects, plugin increments object tag version and
    all linked cache by specific tag name will automatically spoil.
  </description>
  <lead>
    <name>Ilya Sabelnikov</name>
    <user>ilya</user>
    <email>fruit.dev@gmail.com</email>
    <active>yes</active>
  </lead>
  <date>2012-12-30</date>
  <time>02:25:00</time>
  <version>
    <release>4.4.0</release>
    <api>4.1.0</api>
  </version>
  <stability>
    <release>stable</release>
    <api>stable</api>
  </stability>
  <license uri="http://www.symfony-project.com/license">MIT license</license>
  <notes>
    * [added] Handling cache tags rollback/commit inside Doctrine transactions [GH-18]
    * [added] New two app.yml settings to customize collection and object tag names
    * [updated] API partially changed
    * [updated] README
    * [fixed] Along the way fixed more than one minor bug and IMHO one major bug
    * [fixed] Almost all tests were fixed because they used Doctrine transaction to keep test fixtures unchanged
  </notes>
  <contents>
    <dir name="/">
      <file name="VERSION" md5sum="9b4bffa460105781f82b1d463bde8200" role="data" />
      <file name="README" md5sum="ccdb9bc56775c64e3f466b59a074ea2d" role="data" />
      <dir name="config">
        <file name="sfCacheTaggingPluginConfiguration.class.php" md5sum="99d0d5bab1bee51e434c23d7559bf1ad" role="data" />
        <file name="app.yml" md5sum="edfa02536d7187939170cb88c530fecb" role="data" />
      </dir>
      <file name="LICENSE" md5sum="3cbd940b1dee88c22f001a9f9c77ac29" role="data" />
      <dir name="lib">
        <dir name="vendor">
          <dir name="Doctrine">
            <dir name="EventListener">
              <file name="Cachetaggable.php" md5sum="5c4dedbfb1a9fdc9120dec598cd7f1f8" role="data" />
            </dir>
            <dir name="Connection">
              <file name="CachetaggableUnitOfWork.php" md5sum="37c2aebf3d6a948088a0fcc87bfea4f2" role="data" />
            </dir>
            <dir name="Cache">
              <file name="Proxy.php" md5sum="db4332ca694a2e060505b0fd8870211e" role="data" />
            </dir>
            <dir name="Collection">
              <file name="Cachetaggable.php" md5sum="b810a1f5416209eb2e0359c3f964d600" role="data" />
            </dir>
            <dir name="Template">
              <file name="Cachetaggable.php" md5sum="290a4b6cc83f918f52ca4d7072eafb3d" role="data" />
              <dir name="Listener">
                <file name="Cachetaggable.php" md5sum="a1e68646c8ac2b45ce07f4b31df67955" role="data" />
              </dir>
            </dir>
            <dir name="Query">
              <file name="Cachetaggable.php" md5sum="276d2431ca3d4c18a9987938c010f3ec" role="data" />
            </dir>
          </dir>
        </dir>
        <dir name="doctrine">
          <file name="sfCachetaggableDoctrineRecord.class.php" md5sum="580fbdd56ccf95cad320424dddf52d9b" role="data" />
        </dir>
        <dir name="log">
          <file name="sfFileCacheTagLogger.class.php" md5sum="55d2f55c68fc53cd1f4f6429a17b3fdd" role="data" />
          <file name="sfNoCacheTagLogger.class.php" md5sum="0f8ecc3c9787f2358ed7afc9e5d40c50" role="data" />
          <file name="sfCacheTagLogger.class.php" md5sum="36bfd8b37b9b2f592a9522a526203ac0" role="data" />
          <file name="sfOutputCacheTagLogger.class.php" md5sum="d78a85a9ac12f489fd7b128775dcfa52" role="data" />
        </dir>
        <dir name="util">
          <file name="sfTagNamespacedParameterHolder.class.php" md5sum="080025f9777cda3a4748f70c6f04d7f1" role="data" />
          <file name="sfCacheTaggingToolkit.class.php" md5sum="2078f1ed9205ae54fe934d5e4211783f" role="data" />
          <file name="sfCallableArray.class.php" md5sum="3791a6ea155edb358e5bf730cb5d8cdd" role="data" />
          <file name="sfViewCacheTagManagerBridge.class.php" md5sum="dbe756bfac054a57577f6355c53f131b" role="data" />
          <file name="sfContentTagHandler.class.php" md5sum="9265ed6acf9dcb651914b3954d317a57" role="data" />
        </dir>
        <dir name="filter">
          <file name="AuthParamFilter.class.php" md5sum="3219b1d40184f6684c3eb6a72afa3bcc" role="data" />
        </dir>
        <dir name="request">
          <file name="sfCacheTaggingWebRequest.class.php" md5sum="b98f110aa64140b5d213924f52d84323" role="data" />
        </dir>
        <dir name="cache">
          <file name="sfTaggingCacheInterface.class.php" md5sum="126ed45e0db4081c91941f76640ff231" role="data" />
          <dir name="extended">
            <file name="sfSQLitePDOTaggingCache.class.php" md5sum="769cce4510405cac59b7fb6c8ef16207" role="data" />
            <file name="sfSQLiteTaggingCache.class.php" md5sum="74b4958fc03df432db6b1cc7b6da0841" role="data" />
            <file name="sfAPCTaggingCache.class.php" md5sum="8e84204e3464acea3ddb9e9503dea1fb" role="data" />
            <file name="sfXCacheTaggingCache.class.php" md5sum="07202ba997779d0ce24ebff2959de757" role="data" />
            <file name="sfMemcacheTaggingCache.class.php" md5sum="0df9881420f10981cfa53cc253fc63e5" role="data" />
            <file name="sfEAcceleratorTaggingCache.class.php" md5sum="886a4103071e5c17c761a68294a19575" role="data" />
            <file name="sfNoTaggingCache.class.php" md5sum="113f36a4115d24c7394ba386c5ee1b5e" role="data" />
            <file name="sfFileTaggingCache.class.php" md5sum="fb3f4ba403cf8043fbbda4d8adc3a540" role="data" />
          </dir>
          <file name="sfTaggingCache.class.php" md5sum="c6d245eed8376cd9097e4253d1f5d783" role="data" />
          <dir name="drivers">
            <file name="sfSQLitePDOCache.class.php" md5sum="a45b418d5a6b36b8357140b736d3d5d9" role="data" />
          </dir>
          <file name="CacheMetadata.class.php" md5sum="31bd21837514e3cf534ac08df7aa5210" role="data" />
        </dir>
        <dir name="view">
          <file name="sfViewCacheTagManager.class.php" md5sum="0f2ca1fc53030ed42d98b19d4e49aaa1" role="data" />
        </dir>
      </dir>
    </dir>
  </contents>
  <dependencies>
    <required>
      <php>
        <min>5.2.4</min>
      </php>
      <pearinstaller>
        <min>1.4.1</min>
      </pearinstaller>
      <package>
        <name>symfony</name>
        <channel>pear.symfony-project.com</channel>
        <min>1.3.0</min>
        <max>1.5.0</max>
        <exclude>1.5.0</exclude>
      </package>
    </required>
  </dependencies>
  <phprelease />
  <changelog>
    <release>
      <version>
        <release>4.4.0</release>
        <api>4.1.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2012-12-30</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * [added] Handling cache tags rollback/commit inside Doctrine transactions [GH-18]
        * [added] New two app.yml settings to customize collection and object tag names
        * [updated] API partially changed
        * [updated] README
        * [fixed] Along the way fixed more than one minor bug and IMHO one major bug
        * [fixed] Almost all tests were fixed because they used Doctrine transaction to keep test fixtures unchanged
      </notes>
    </release>
    <release>
      <version>
        <release>4.3.0</release>
        <api>4.0.2</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2012-12-16</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * [fixed] When ``SoftDelete`` installed after ``Cachetaggable`` (``actAs`` section), ``preDqlDelete`` forces to update already softly deleted records (thanks to Paul Moore)
        * [added] New approach to append custom parameter(-s) to the cache key only for authenticated users
        * [added] more coverage tests
      </notes>
    </release>
    <release>
      <version>
        <release>4.2.2</release>
        <api>4.0.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2012-02-05</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [fixed] Minor fix to obtainCollectionVersion (thanks paulkmoore)
        * ilya: [updated] Renewed copyright years
      </notes>
    </release>
    <release>
      <version>
        <release>4.2.1</release>
        <api>4.0.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-12-06</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [updated] README removed unnecessary block
      </notes>
    </release>
    <release>
      <version>
        <release>4.2.0</release>
        <api>4.0.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-12-06</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [fixed] Attaching unsaved record to cache block cause the error
        * ilya: [added] Added custom HTTP request class and custom filter to differ cache blocks between authenticated users
        * ilya: [updated] README - added notes how to keep different cache to each authenticated user
      </notes>
    </release>
    <release>
      <version>
        <release>4.1.1</release>
        <api>4.0.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-10-20</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [removed] Test environment files removed from package. All tests available only from GIT repository. [GH-15]
        * ilya: [updated] README
      </notes>
    </release>
    <release>
      <version>
        <release>4.1.0</release>
        <api>4.0.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-09-04</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [added] NestedSet behavior support [GH-14]
        * ilya: [updated] README
      </notes>
    </release>
    <release>
      <version>
        <release>4.0.0</release>
        <api>4.0.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-04-10</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [added] Option invalidateCollectionVersionByChangingColumns to setup Cachetaggable behavior
        * ilya: [added] Cascading tag deletion through the model relations
        * ilya: [added] Doctrine_Record::link and Doctrine_Record::unlink updates refTable's tags
        * ilya: [updated] README
        * ilya: [updated] new API
        * ilya: [fixed] skipOnChange did not work properly
      </notes>
    </release>
    <release>
      <version>
        <release>3.1.0</release>
        <api>3.1.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-02-20</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [added] New option for behavior setup invalidateCollectionVersionOnUpdate
        * ilya: [changed] Doctrine_Record::getTags() by default return only one self tag (thanks Roman Grigorov)
        * ilya: [changed] getTags() by default returns all tags recursively and getTags(false) NOT recursively
        * ilya: [fixed] Removed custom object for storing data and tags (CacheMetadata), this kills PHP apc_bin_dump() functionality.
        * ilya: [fixed] Doctrine_Record::replace() now works fine, when record is replaced.
        * ilya: [fixed] I18n behavior never invalidates object tags on updating i18n-table columns. (thanks Yury Maksimenko)
        * ilya: [fixed] Sometimes object version stays unchanged in database (as expected), but invalidated in backend.
      </notes>
    </release>
    <release>
      <version>
        <release>3.0.0</release>
        <api>3.0.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-02-12</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [added] Updating objects now does not invalidates collections tags. To invalidate collection tag you need to delete or add new object of specific collection. (thanks Roman Grigorov)
        * ilya: [fixed] Calling an unknown method from actions with a disabled cache does not throws the Exception
        * ilya: [changed] Some Cachetaggable behaviors method names renamed due to Doctrine possible conflicts.
        * ilya: [added] new additional tests
        * ilya: [updated] README
      </notes>
    </release>
    <release>
      <version>
        <release>2.1.3</release>
        <api>2.2.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-02-03</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [fixed] By using doctrine migration, default column "object_version" contains NULL value (throws an exception on frontend)
      </notes>
    </release>
    <release>
      <version>
        <release>2.1.2</release>
        <api>2.2.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-02-01</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [updated] README (added i18n limitation)
        * ilya: [fixed] Conclicts with SoftDelete in "preDqlDelete" + tests
      </notes>
    </release>
    <release>
      <version>
        <release>2.1.1</release>
        <api>2.2.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2011-01-24</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [updated] README
        * ilya: [fixed] Doctrine_Template_Listener_Cachetaggable::preDqlUpdate + tests
        * ilya: [fixed] sfWebDebugLogInfo contains extra-incorrect message, sent by sfViewCacheTagManager
      </notes>
    </release>
    <release>
      <version>
        <release>2.1.0</release>
        <api>2.2.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-12-24</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [updated] README
        * ilya: [added] "skipOnChange" directive (schema.yml)
        * ilya: [fixed] sfFileTaggingCache::getCacheKeys
        * ilya: [added] optimized sf*TaggingCache::getMany
        * ilya: [removed] app_sfcachetaggingplugin_template_* directives
        * ilya: [changed] Renamed getObjectVersion to obtainObjectVersion, setObjectVersion to assignObjectVersion
      </notes>
    </release>
    <release>
      <version>
        <release>2.0.2</release>
        <api>2.1.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-09-15</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [updated] README
        * ilya: [fixed] SoftDelete behavior conflict
      </notes>
    </release>
    <release>
      <version>
        <release>2.0.1</release>
        <api>2.1.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-08-22</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [updated] README
      </notes>
    </release>
    <release>
      <version>
        <release>2.0.0</release>
        <api>2.1.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-08-22</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [added] Storing doctrine objects/collections by using build-in Doctrine mechanism
        * ilya: [added] Ability to specify different cache back-ends for data and tags cache
        * ilya: [added] Easy customized logger
        * ilya: [added] By switching cache off or migration to build-in cache manager will no
                        affect code functionality
        * ilya: [added] cache info block (blue/yellow box) now display linked to cache
                        tags with its version
        * ilya: [added] SQLite via PDO Cache backend
        * ilya: [added] new tests - code coverage: 98%;
      </notes>
    </release>
    <release>
      <version>
        <release>1.4.4</release>
        <api>1.1.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-06-09</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [fixed] resolved conflict with SoftDelete build-in Doctrine behavior
        * ilya: [fixed] by saving not modified object, version was updated
        * ilya: [added] new unit/functional tests
      </notes>
    </release>
    <release>
      <version>
        <release>1.4.3</release>
        <api>1.1.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-05-26</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [fixed] in case sfViewCacheTagManager is enabled and some model (schema.yml) has no "actAs: Cachetaggable" - throws uncatched exception
      </notes>
    </release>
    <release>
      <version>
        <release>1.4.2</release>
        <api>1.1.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-05-24</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [fixed] confused lifetime logic on tags/locks/data
        * ilya: [fixed] sf*Cache::has() does not checking tags versions
        * ilya: [added] new section in README file: Adding tags to the action with layout
        * ilya: [added] new section in README file: Adding tags to the action without layout
        * ilya: [updated] updated tag/locks lifetime setup on 6 step section 1 (6.1)
        * ilya: [added] new functional tests on action and page tagging
        * ilya: [fixed] microtime_precision should be in range 0…6
        * mcnilz: [added] ability to add tags to the page with layout
        * ilya: [added] ability to add tags to the specific action without layout (inspired by mcnilz)
        * ilya: [added] more unit/functional tests, code coverage at 84%
        * ilya: [deleted] removed README.markdown (only for github.com)
        * ilya: [added] ability to select log format (short|extended)
      </notes>
    </release>
    <release>
      <version>
        <release>1.3.1</release>
        <api>1.1.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-04-17</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: [added] ability to select log format (short|extended)
      </notes>
    </release>
    <release>
      <version>
        <release>1.3.0</release>
        <api>1.1.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-04-17</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
         * ilya: [updated] README
         * ilya: [fixed] empty collections was never updated
         * ilya: [added] support to add tags to Doctrine_Collection_Cachetaggable and Doctrine_Record using any compatible types (array|ArrayAccess|Doctrine_Collection_Cachetaggable|Doctrine_Record)
         * ilya: [added] new tests
      </notes>
    </release>
    <release>
      <version>
        <release>1.2.0</release>
        <api>1.0.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2010-01-11</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
         * ilya: updated README
         * ilya: dql queries (update/delete) also updates version column and thier tags
      </notes>
    </release>
    <release>
      <version>
        <release>1.1.0</release>
        <api>1.0.1</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2009-12-20</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
         * ilya: update README
         * ilya: tag name could be based on many columns
         * ilya: checked opportunity to work with I18n behavior
      </notes>
    </release>
    <release>
      <version>
        <release>1.0.1</release>
        <api>1.0.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2009-12-18</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
         * ilya: correcting lexical/grammatical mistakes
      </notes>
    </release>
    <release>
      <version>
        <release>1.0.0</release>
        <api>1.0.0</api>
      </version>
      <stability>
        <release>stable</release>
        <api>stable</api>
      </stability>
      <date>2009-12-16</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
         * ilya: updated setup manual in README, added Limitation block.
      </notes>
    </release>
    <release>
      <version>
        <release>0.1.0</release>
        <api>0.1.0</api>
      </version>
      <stability>
        <release>beta</release>
        <api>alpha</api>
      </stability>
      <date>2009-12-16</date>
      <license uri="http://www.symfony-project.com/license">MIT license</license>
      <notes>
        * ilya: first release
      </notes>
    </release>
  </changelog>
</package>
